#include <gtest/gtest.h>
#include <rz/convertstring.h>
#include <unichar.h>

const char test_greek_utf8[] = u8"Γαζέες καὶ μυρτιὲς δὲν θὰ βρῶ πιὰ στὸ χρυσαφὶ ξέφωτο";
const char test_thai_utf8[] =
    u8"๏ เป็นมนุษย์สุดประเสริฐเลิศคุณค่า  กว่าบรรดาฝูงสัตว์เดรัจฉาน จงฝ่าฟันพัฒนาวิชาการ อย่าล้างผลาญฤๅเข่นฆ่าบีฑาใคร ไม่ถือโทษโกรธแช่งซัดฮึดฮัดด่า "
    u8"หัดอภัยเหมือนกีฬาอัชฌาสัย ปฏิบัติประพฤติกฎกำหนดใจ พูดจาให้จ๊ะๆจ๋าๆ น่าฟังเอย ฯ ";
const char test_cyrillic_utf8[] = u8"В чащах юга жил бы цитрус? Да, но фальшивый экземпляр!";
const char test_japanese_utf8[] =
    u8"いろはにほへとちりぬるを わかよたれそつねならむ うゐのおくやまけふこえてあさきゆめみしゑひもせす";

const char16_t test_greek_utf16[] = u"Γαζέες καὶ μυρτιὲς δὲν θὰ βρῶ πιὰ στὸ χρυσαφὶ ξέφωτο";
const char16_t test_thai_utf16[] =
    u"๏ เป็นมนุษย์สุดประเสริฐเลิศคุณค่า  กว่าบรรดาฝูงสัตว์เดรัจฉาน จงฝ่าฟันพัฒนาวิชาการ อย่าล้างผลาญฤๅเข่นฆ่าบีฑาใคร ไม่ถือโทษโกรธแช่งซัดฮึดฮัดด่า "
    u"หัดอภัยเหมือนกีฬาอัชฌาสัย ปฏิบัติประพฤติกฎกำหนดใจ พูดจาให้จ๊ะๆจ๋าๆ น่าฟังเอย ฯ ";
const char16_t test_cyrillic_utf16[] = u"В чащах юга жил бы цитрус? Да, но фальшивый экземпляр!";
const char16_t test_japanese_utf16[] =
    u"いろはにほへとちりぬるを わかよたれそつねならむ うゐのおくやまけふこえてあさきゆめみしゑひもせす";

const char greek_cp1253[] =
    "\x49\x93\x49\xb1\x49\xb6\x49\xad\x49\xb5\x49\x82\x20\x49\x20\x49\xb1\x61\xbd\xb6\x20\x49\x20\x49\x85\x49\x81\x49\x84"
    "\x49\x20\x61\xbd\xb2\x49\x82\x20\x49\x2f\x61\xbd\xb2\x49\xbd\x20\x49\x20\x61\xbd\xb0\x20\x49\xb2\x49\x81\x61\x20\xb6"
    "\x20\x49\x80\x49\x20\x61\xbd\xb0\x20\x49\x83\x49\x84\x61\xbd\x20\x20\x49\x87\x49\x81\x49\x85\x49\x83\x49\xb1\x49\x86"
    "\x61\xbd\xb6\x20\x49\x20\x49\xad\x49\x86\x49\x89\x49\x84\x49\x20";
const char thai_cp874[] =
    "\x20\x20\x8f\x20\x20\x20\x80\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x94\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x80\x20\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x20\x20\x90\x20\x20\x80\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x22\x20\x20\x20\x20\x20"
    "\x93\x20\x20\x22\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x81\x20\x20\x15\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x94\x20\x20\x20\x20\x20\x9d\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x95\x20"
    "\x20\x15\x20\x20\x20\x20\x20\x80\x20\x20\x94\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x9d\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20"
    "\x20\x20\x20\x20\x92\x20\x20\x20\x20\x20\x20\x20\x20\x15\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x81\x20\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x8d\x20\x20\x20\x20\x20\x85\x20\x20\x80\x20\x20\x2c\x20\x20\x20\x20\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x91\x20\x20\x20\x20\x20\x20\x20\x20\x22\x20\x20"
    "\x20\x20\x20\x20\x22\x20\x20\x20\x20\x20\x20\x20\x20\x96\x20\x20\x20\x20\x20\x20\x20\x20\x2c\x20\x20\x97\x20\x20\x20"
    "\x20\x20\x2c\x20\x20\x81\x20\x20\x20\x20\x20\x20\x20\x20\x81\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20"
    "\x20\x20\x20\x94\x20\x20\x20\x20\x20\x14\x20\x20\x94\x20\x20\x20\x20\x20\x20\x20\x20\x94\x20\x20\x94\x20\x20\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x94\x20\x20\x20\x20\x20\xa0\x20\x20\x20\x20\x20\x20\x20\x20\x80\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x81\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x8f\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x95\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20"
    "\x20\x95\x20\x20\x20\x20\x20\x81\x20\x20\x20\x20\x20\x81\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x94\x20\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x94\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20"
    "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x80\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20";
const char cyrillic_cp1251[] =
    "\x20\x92\x20\x4e\x87\x20\xb0\x4e\x89\x20\xb0\x4e\x85\x20\x4e\x5a\x20\x20\x20\xb0\x20\x20\xb6\x20\x20\x20\xbb\x20\x20"
    "\xb1\x4e\x8b\x20\x4e\x86\x20\x20\x4e\x82\x4e\x88\x4e\x20\x4e\x20\x3f\x20\x20\x94\x20\xb0\x2c\x20\x20\x20\x20\x20\x20"
    "\x4e\x84\x20\xb0\x20\xbb\x4e\x20\x4e\x20\x20\x20\x20\x20\x4e\x8b\x20\x20\x20\x4e\x20\x20\x20\x20\xb7\x20\xb5\x20\x20"
    "\x20\x20\x20\xbb\x4e\x20\x4e\x88\x21";
const char japanese_cp932[] =
    "\x61\x20\x20\x61\x20\x20\x61\x20\x81\x50\x61\x20\x81\xe1\x61\x20\x81\xe2\x61\x20\x81\x43\x61\x20\x81\x4e\x61\x20\x21"
    "\x61\x20\x20\x61\x20\x81\xca\x61\x20\x20\x61\x20\x81\x66\x20\x61\x20\x20\x61\x20\x20\x61\x20\x20\x61\x20\x20\x61\x20"
    "\x20\x61\x20\x20\x61\x20\x20\x61\x20\x2d\x61\x20\x61\x61\x20\x81\xf1\x61\x20\x20\x20\x61\x20\x81\xf5\x61\x20\x20\x61"
    "\x20\x52\x61\x20\x20\x61\x20\x20\x61\x20\x20\x61\x20\x20\x61\x20\x81\x65\x61\x20\x83\xca\x61\x20\x81\x67\x61\x20\x20"
    "\x61\x20\x7c\x61\x20\x20\x61\x20\x20\x61\x20\x20\x61\x20\x81\xf5\x61\x20\x20\x61\x20\x20\x61\x20\x20\x61\x20\x81\x65"
    "\x61\x20\x32\x61\x20\x20\x61\x20\x20\x61\x20\x20";

TEST(stringconvert, utf8_to_codepage)
{
    char narrow_buff[1024];
    uint32_t narrow_size = sizeof(narrow_buff);

    ConvertStringEncoding(test_greek_utf8, sizeof(test_greek_utf8), 8, narrow_buff, narrow_size, 1253);
    EXPECT_EQ(strlen(greek_cp1253), strlen(narrow_buff));
    EXPECT_STREQ(greek_cp1253, narrow_buff);
    narrow_size = sizeof(narrow_buff);
    ConvertStringEncoding(test_thai_utf8, sizeof(test_thai_utf8), 8, narrow_buff, narrow_size, 874);
    EXPECT_STREQ(thai_cp874, narrow_buff);
    narrow_size = sizeof(narrow_buff);
    ConvertStringEncoding(test_cyrillic_utf8, sizeof(test_cyrillic_utf8), 8, narrow_buff, narrow_size, 1251);
    EXPECT_STREQ(cyrillic_cp1251, narrow_buff);
    narrow_size = sizeof(narrow_buff);
    ConvertStringEncoding(test_japanese_utf8, sizeof(test_japanese_utf8), 8, narrow_buff, narrow_size, 932);
    EXPECT_STREQ(japanese_cp932, narrow_buff);
}

TEST(stringconvert, utf16_to_codepage)
{
    char narrow_buff[1024];
    uint32_t narrow_size = sizeof(narrow_buff);

    ConvertStringEncoding(test_greek_utf16, sizeof(test_greek_utf16), 16, narrow_buff, narrow_size, 1253);
    EXPECT_EQ(strlen(greek_cp1253), strlen(narrow_buff));
    EXPECT_STREQ(greek_cp1253, narrow_buff);
    narrow_size = sizeof(narrow_buff);
    ConvertStringEncoding(test_thai_utf16, sizeof(test_thai_utf16), 16, narrow_buff, narrow_size, 874);
    EXPECT_STREQ(thai_cp874, narrow_buff);
    narrow_size = sizeof(narrow_buff);
    ConvertStringEncoding(test_cyrillic_utf16, sizeof(test_cyrillic_utf16), 16, narrow_buff, narrow_size, 1251);
    EXPECT_STREQ(cyrillic_cp1251, narrow_buff);
    narrow_size = sizeof(narrow_buff);
    ConvertStringEncoding(test_japanese_utf16, sizeof(test_japanese_utf16), 16, narrow_buff, narrow_size, 932);
    EXPECT_STREQ(japanese_cp932, narrow_buff);
}

#if 0
TEST(stringconvert, utf8_to_utf16)
{
    char16_t wide_buff[1024];
    uint32_t wide_size = sizeof(wide_buff);

    ConvertStringEncoding(test_greek_utf8, sizeof(test_greek_utf8), 8, wide_buff, wide_size, 16);
    EXPECT_STREQ(test_greek_utf16, wide_buff);
    wide_size = sizeof(wide_buff);
    ConvertStringEncoding(test_thai_utf8, sizeof(test_thai_utf8), 8, wide_buff, wide_size, 16);
    EXPECT_STREQ(test_thai_utf16, wide_buff);
    wide_size = sizeof(wide_buff);
    ConvertStringEncoding(test_cyrillic_utf8, sizeof(test_cyrillic_utf8), 8, wide_buff, wide_size, 16);
    EXPECT_STREQ(test_cyrillic_utf16, wide_buff);
    wide_size = sizeof(wide_buff);
    ConvertStringEncoding(test_japanese_utf8, sizeof(test_japanese_utf8), 8, wide_buff, wide_size, 16);
    EXPECT_STREQ(test_japanese_utf16, wide_buff);
}

TEST(stringconvert, utf16_to_utf8)
{
    char narrow_buff[1024];
    uint32_t narrow_size = sizeof(narrow_buff);

    ConvertStringEncoding(test_greek_utf16, sizeof(test_greek_utf16) / 2, 16, narrow_buff, narrow_size, 8);
    EXPECT_STREQ(test_greek_utf8, narrow_buff);
    narrow_size = sizeof(narrow_buff);
    ConvertStringEncoding(test_thai_utf16, sizeof(test_thai_utf16) / 2, 16, narrow_buff, narrow_size, 8);
    EXPECT_STREQ(test_thai_utf8, narrow_buff);
    narrow_size = sizeof(narrow_buff);
    ConvertStringEncoding(test_cyrillic_utf16, sizeof(test_cyrillic_utf16) / 2, 16, narrow_buff, narrow_size, 8);
    EXPECT_STREQ(test_cyrillic_utf8, narrow_buff);
    narrow_size = sizeof(narrow_buff);
    ConvertStringEncoding(test_japanese_utf16, sizeof(test_japanese_utf16) / 2, 16, narrow_buff, narrow_size, 8);
    EXPECT_STREQ(test_japanese_utf8, narrow_buff);
}
#endif
